/*
17069 파이프 옮기기 2
*/
#include <stdio.h>
#include <iostream> 

using namespace std;


int N;
long long dp[33][33][3];
bool house[33][33];

void print_arr(int pipe){
    cout << "pipe: " << pipe << "\n";
    for(int r = 1; r <= N; r++){
        for(int c = 1; c <= N; c++){
            cout << dp[r][c][pipe] << " ";
        }
        cout << "\n";
    }
}

int main(){
    FILE *stream =freopen("S2\\37\\input\\17069.txt", "r", stdin);
    if(!stream) perror("freopen");
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> N;

    for(int r = 1; r <= N; r++){
        for(int c = 1; c <= N; c ++){
            cin >> house[r][c];
        }
    }

    dp[1][1][0] = 1;
    // print_arr(0);
    // cout << N << "\n";

    for(int r = 1; r <= N; r++){
        for(int c = 1; c <= N; c++){
            if(house[r][c] != 1){
                if(house[r][c+1] != 1)
                    dp[r][c][0] += dp[r][c-1][0] + dp[r-1][c-1][2];
                if(house[r+1][c] != 1)
                    dp[r][c][1] += dp[r-1][c][1] + dp[r-1][c-1][2];
                if(!(house[r][c+1] || house[r+1][c] || house[r+1][c+1]))
                    dp[r][c][2] += dp[r][c-1][0] + dp[r-1][c][1] + dp[r-1][c-1][2] ;
            }
        }
        // print_arr(0);
        // cout << "\n";

        // print_arr(1);
        // cout << "\n";

        // print_arr(2);
        // cout << "\n";

        // cout << "--------------\n";
    }


    cout << dp[N][N-1][0] + dp[N-1][N][1] + dp[N-1][N-1][2];

    return 0;
}
